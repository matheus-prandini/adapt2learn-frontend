name: Deploy Specific Game

on:
  workflow_dispatch:
    inputs:
      game_id:
        description: 'ID do jogo (ex: fx3YwKli0BtfsG2OBZwv)'
        required: true
      version:
        description: 'Versão do jogo (ex: 20250713153206)'
        required: true

jobs:
  deploy-game:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      # 1) Checkout do código
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2) Autentica no GCP
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_JSON }}

      # 3) Prepara o SDK do Google Cloud
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: adapt2learn-api

      # 4) Baixa apenas o ZIP de deploy (sem backslashes para evitar erros de citação)
      - name: Download deploy ZIP
        run: |
          mkdir -p public/games/${{ github.event.inputs.game_id }}
          gsutil cp \
            gs://adapt2learn-api.firebasestorage.app/games/${{ github.event.inputs.game_id }}/deploys/${{ github.event.inputs.version }}.zip \
            public/games/${{ github.event.inputs.game_id }}/deploy.zip

      # 5) Descompacta e “achata” o conteúdo em public/games/{game_id}
      - name: Unzip and flatten deploy into public/games/
        run: |
          cd public/games/${{ github.event.inputs.game_id }}
          mkdir tmp
          unzip -o deploy.zip -d tmp
          shopt -s nullglob
          for d in tmp/*/; do
            mv "$d"* .
          done
          rm -rf tmp deploy.zip

      # 6) Sincroniza o conteúdo extraído de volta para o bucket
      - name: Sync extracted game to GCS
        run: |
          gsutil -m rsync -d -r \
            public/games/${{ github.event.inputs.game_id }} \
            gs://adapt2learn-api.firebasestorage.app/public/games/${{ github.event.inputs.game_id }}

      # 7) Setup Node.js para build
      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      # 8) Sincroniza todas as pastas public/games antes do build
      - name: Sync all public/games from GCS
        run: |
          gsutil -m rsync -r \
            gs://adapt2learn-api.firebasestorage.app/public/games \
            public/games

      # 9) Build do frontend (CRA copia tudo de public/ para build/)
      - name: Install & Build frontend
        env:
          CI: false
          NODE_OPTIONS: --openssl-legacy-provider
        run: |
          npm ci
          npm run build

      # 10) Deploy no Firebase Hosting
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken:              ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.GCP_SERVICE_ACCOUNT_JSON }}
          channelId:              live
          projectId:              adapt2learn-api
